# Определение количества различных подстрок с использованием хеш-функции.
# Пусть на вход функции дана строка. Требуется вернуть количество различных
# подстрок в этой строке.
# Примечание: в сумму не включаем пустую строку и строку целиком.
# Пример работы функции:
#
# func("papa")
# 6
# func("sova")
# 9

import hashlib

def sub_col(s):
    hash_ = []

    for i in range(1, len(s)): # i определяет количество символов в подстроке
        hash_.append(hashlib.sha1(s[0:i].encode('utf-8')).hexdigest())
        l = len(hash_)
        for j in range(1, len(s) - i + 1): # j определяет первый символ рассматриваемой поджстроки
            s1 = s[j:j+i]
            f = True # флаг для отслеживания есть ли такой хеш в уже записанных
            for k in range(l - 1, len(hash_)): # проверка наличия хеша рассматриваемой подстроки в ранее записанных
                if hash_[k] == hashlib.sha1(s1.encode('utf-8')).hexdigest():
                    f = False
            if f: # если хеш еще не встречался, то запоминаем его
                hash_.append(hashlib.sha1(s1.encode('utf-8')).hexdigest())

    return (len(hash_)) # на выход подаем количество запомненных хешей

subs = input('введите строку: ')
print(sub_col(subs))

